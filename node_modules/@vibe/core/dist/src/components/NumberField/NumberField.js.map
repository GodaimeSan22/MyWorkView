{"version":3,"file":"NumberField.js","sources":["../../../../src/components/NumberField/NumberField.tsx"],"sourcesContent":["import React, { forwardRef, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { NumberFieldProps } from \"./NumberField.types\";\nimport useNumberFieldState from \"./hooks/useNumberFieldState\";\nimport useSpinButtonHandlers from \"./hooks/useSpinButtonHandlers\";\nimport BaseInput from \"../BaseInput/BaseInput\";\nimport FieldLabel from \"../FieldLabel/FieldLabel\";\nimport InfoText from \"../InfoText/InfoText\";\nimport Icon from \"../Icon/Icon\";\nimport NumberFieldSpinButton from \"./components/NumberFieldSpinButton/NumberFieldSpinButton\";\nimport styles from \"./NumberField.module.scss\";\nimport Flex from \"../Flex/Flex\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\n\nconst NumberField = forwardRef(\n  (\n    {\n      className,\n      value,\n      onChange,\n      label,\n      required,\n      placeholder,\n      infoText,\n      error,\n      success,\n      disabled,\n      readOnly,\n      min,\n      max,\n      step = 1,\n      size = \"medium\",\n      leftIcon,\n      \"aria-label\": ariaLabel,\n      id,\n      \"data-testid\": dataTestId,\n      allowOutOfBounds,\n      onValidityChange,\n      ...inputProps\n    }: NumberFieldProps,\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const mergedRef = useMergeRef<HTMLInputElement>(ref, inputRef);\n\n    const {\n      inputValue,\n      numericValue,\n      onChange: handleChange,\n      onKeyDown,\n      isAtMin,\n      isAtMax\n    } = useNumberFieldState({\n      value,\n      onChange,\n      min,\n      max,\n      step,\n      disabled,\n      readOnly,\n      allowOutOfBounds,\n      onValidityChange\n    });\n\n    const { onIncrement, onDecrement } = useSpinButtonHandlers({\n      onChange,\n      value: numericValue,\n      step,\n      min,\n      max,\n      allowOutOfBounds,\n      readOnly,\n      inputRef\n    });\n\n    const renderedLeftIcon = useMemo(() => {\n      if (!leftIcon) return null;\n      return <Icon icon={leftIcon} className={styles.leftIcon} />;\n    }, [leftIcon]);\n\n    const renderedRightIcon = useMemo(() => {\n      return (\n        <NumberFieldSpinButton\n          inputId={id}\n          onIncrement={onIncrement}\n          onDecrement={onDecrement}\n          disabled={disabled || readOnly}\n          size={size}\n          isAtMin={isAtMin}\n          isAtMax={isAtMax}\n        />\n      );\n    }, [id, onIncrement, onDecrement, disabled, readOnly, size, isAtMin, isAtMax]);\n\n    const infoTextId = useMemo(() => {\n      return infoText && id ? `${id}-info-text` : undefined;\n    }, [infoText, id]);\n\n    const labelId = useMemo(() => {\n      return label && id ? `${id}-label` : undefined;\n    }, [label, id]);\n\n    return (\n      <Flex direction=\"column\" align=\"stretch\" gap=\"xs\" className={cx(styles.numberField, className)}>\n        <FieldLabel id={labelId} className={styles.label} labelText={label} required={required} labelFor={id} />\n        <BaseInput\n          {...inputProps}\n          data-testid={dataTestId}\n          ref={mergedRef}\n          id={id}\n          value={inputValue}\n          onChange={handleChange}\n          onKeyDown={onKeyDown}\n          placeholder={placeholder}\n          type=\"text\"\n          inputMode=\"numeric\"\n          inputRole=\"spinbutton\"\n          aria-valuenow={numericValue}\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-required={required}\n          aria-label={ariaLabel || label}\n          aria-labelledby={labelId}\n          aria-describedby={infoTextId}\n          disabled={disabled}\n          readOnly={readOnly}\n          size={size}\n          error={error}\n          success={success}\n          renderLeft={renderedLeftIcon}\n          renderRight={renderedRightIcon}\n        />\n        <InfoText\n          id={infoTextId}\n          text={infoText}\n          error={error}\n          success={success}\n          disabled={disabled}\n          readOnly={readOnly}\n        />\n      </Flex>\n    );\n  }\n);\n\nexport default NumberField;\n"],"names":["NumberField","forwardRef","_a","ref","className","value","onChange","label","required","placeholder","infoText","error","success","disabled","readOnly","min","max","_a$step","step","_a$size","size","leftIcon","ariaLabel","id","dataTestId","allowOutOfBounds","onValidityChange","inputProps","__rest","inputRef","useRef","mergedRef","useMergeRef","_useNumberFieldState","useNumberFieldState","inputValue","numericValue","handleChange","onKeyDown","isAtMin","isAtMax","_useSpinButtonHandler","useSpinButtonHandlers","onIncrement","onDecrement","renderedLeftIcon","useMemo","React","createElement","Icon","icon","styles","renderedRightIcon","NumberFieldSpinButton","inputId","infoTextId","concat","undefined","labelId","Flex","direction","align","gap","cx","numberField","FieldLabel","labelText","labelFor","BaseInput","Object","assign","type","inputMode","inputRole","renderLeft","renderRight","InfoText","text"],"mappings":"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"}