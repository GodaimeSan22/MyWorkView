{"version":3,"file":"DropdownMultiSelectController.js","sources":["../../../../../src/components/DropdownNew/modes/DropdownMultiSelectController.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DropdownMultiControllerProps } from \"../Dropdown.types\";\nimport useDropdownMultiSelect from \"../hooks/useDropdownMultiSelect\";\nimport { BaseListItemData } from \"../../BaseListItem\";\nimport { DropdownContextProps } from \"../context/DropdownContext.types\";\nimport DropdownWrapperUI from \"../components/DropdownWrapperUI\";\n\nconst DropdownMultiSelectController = <Item extends BaseListItemData<Record<string, unknown>>>(\n  props: DropdownMultiControllerProps<Item>\n) => {\n  const {\n    options,\n    isMenuOpen: isMenuOpenProp,\n    autoFocus,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    clearable = true,\n    showSelectedOptions = false,\n    filterOption,\n    dropdownRef,\n    onClear,\n    onOptionRemove,\n    size = \"medium\"\n  } = props;\n\n  const initialMultiSelectedItems = Array.isArray(defaultValue) ? defaultValue : [];\n  const [multiSelectedItemsState, setMultiSelectedItemsState] = useState<Item[]>(initialMultiSelectedItems);\n\n  const {\n    isOpen,\n    highlightedIndex,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    toggleMenu,\n    filteredOptions,\n    selectedItems: hookSelectedItems,\n    addSelectedItem: hookAddSelectedItem,\n    removeSelectedItem: hookRemoveSelectedItem,\n    getDropdownProps\n  } = useDropdownMultiSelect<Item>(\n    options,\n    multiSelectedItemsState,\n    setMultiSelectedItemsState,\n    isMenuOpenProp,\n    autoFocus,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    showSelectedOptions,\n    filterOption\n  );\n\n  const contextValue: DropdownContextProps<Item> = {\n    ...props,\n    isOpen,\n    inputValue: null,\n    highlightedIndex,\n    selectedItem: undefined,\n    selectedItems: hookSelectedItems || [],\n    filteredOptions,\n    clearable,\n    getToggleButtonProps: (toggleOptions?: any) => {\n      return getToggleButtonProps({\n        ...(toggleOptions || {}),\n        disabled: props.readOnly || props.disabled\n      });\n    },\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    getDropdownProps,\n    contextOnClear: () => {\n      hookReset();\n      if (value === undefined) {\n        setMultiSelectedItemsState([]);\n      }\n      onClear?.();\n    },\n    contextOnOptionRemove: (option: Item) => {\n      if (hookRemoveSelectedItem) {\n        hookRemoveSelectedItem(option);\n      }\n      onOptionRemove?.(option);\n    },\n    addSelectedItem: hookAddSelectedItem,\n    removeSelectedItem: hookRemoveSelectedItem,\n    size,\n    toggleMenu\n  };\n\n  return <DropdownWrapperUI contextValue={contextValue} dropdownRef={dropdownRef} />;\n};\n\nexport default DropdownMultiSelectController;\n"],"names":["DropdownMultiSelectController","props","options","isMenuOpenProp","isMenuOpen","autoFocus","defaultValue","value","onChange","onMenuOpen","onMenuClose","onOptionSelect","_props$clearable","clearable","_props$showSelectedOp","showSelectedOptions","filterOption","dropdownRef","onClear","onOptionRemove","_props$size","size","_useState","useState","Array","isArray","_useState2","_slicedToArray","setMultiSelectedItemsState","_useDropdownMultiSele","useDropdownMultiSelect","isOpen","highlightedIndex","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","hookReset","reset","toggleMenu","filteredOptions","hookSelectedItems","selectedItems","hookAddSelectedItem","addSelectedItem","hookRemoveSelectedItem","removeSelectedItem","getDropdownProps","contextValue","inputValue","selectedItem","undefined","toggleOptions","Object","assign","disabled","readOnly","contextOnClear","contextOnOptionRemove","option","React","createElement","DropdownWrapperUI"],"mappings":"0NAOA,IAAMA,EAAgC,SACpCC,GAEA,IACEC,EAgBED,EAhBFC,QACYC,EAeVF,EAfFG,WACAC,EAcEJ,EAdFI,UACAC,EAaEL,EAbFK,aACAC,EAYEN,EAZFM,MACAC,EAWEP,EAXFO,SACAC,EAUER,EAVFQ,WACAC,EASET,EATFS,YACAC,EAQEV,EARFU,eAAcC,EAQZX,EAPFY,UAAAA,OAAY,IAAHD,GAAOA,EAAAE,EAOdb,EANFc,oBAAAA,OAAsB,IAAHD,GAAQA,EAC3BE,EAKEf,EALFe,aACAC,EAIEhB,EAJFgB,YACAC,EAGEjB,EAHFiB,QACAC,EAEElB,EAFFkB,eAAcC,EAEZnB,EADFoB,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAIjBE,EAA8DC,EAD5BC,MAAMC,QAAQnB,GAAgBA,EAAe,IAC0BoB,EAAAC,EAAAL,EAAA,GAAzEM,EAA0BF,EAAA,GAE1DG,EAcIC,EACF5B,EAjB4BwB,EAAA,GAmB5BE,EACAzB,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAI,EACAC,GA1BAe,EAAMF,EAANE,OACAC,EAAgBH,EAAhBG,iBACAC,EAAoBJ,EAApBI,qBACAC,EAAaL,EAAbK,cACAC,EAAYN,EAAZM,aACAC,EAAYP,EAAZO,aACOC,EAASR,EAAhBS,MACAC,EAAUV,EAAVU,WACAC,EAAeX,EAAfW,gBACeC,EAAiBZ,EAAhCa,cACiBC,EAAmBd,EAApCe,gBACoBC,EAAsBhB,EAA1CiB,mBACAC,EAAgBlB,EAAhBkB,iBAiBIC,iCACD/C,GAAK,CACR8B,OAAAA,EACAkB,WAAY,KACZjB,iBAAAA,EACAkB,kBAAcC,EACdT,cAAeD,GAAqB,GACpCD,gBAAAA,EACA3B,UAAAA,EACAoB,qBAAsB,SAACmB,GACrB,OAAOnB,EACFoB,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAACF,GAAiB,CAAA,GACrB,CAAAG,SAAUtD,EAAMuD,UAAYvD,EAAMsD,WAErC,EACDrB,cAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAE,MAAOD,EACPU,iBAAAA,EACAU,eAAgB,WACdpB,SACcc,IAAV5C,GACFqB,EAA2B,IAE7BV,SAAAA,GACD,EACDwC,sBAAuB,SAACC,GAClBd,GACFA,EAAuBc,GAEzBxC,SAAAA,EAAiBwC,EAClB,EACDf,gBAAiBD,EACjBG,mBAAoBD,EACpBxB,KAAAA,EACAkB,WAAAA,IAGF,OAAOqB,EAAAC,cAACC,EAAiB,CAACd,aAAcA,EAAc/B,YAAaA,GACrE"}