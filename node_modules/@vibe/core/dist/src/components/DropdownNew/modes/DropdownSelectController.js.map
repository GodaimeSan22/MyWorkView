{"version":3,"file":"DropdownSelectController.js","sources":["../../../../../src/components/DropdownNew/modes/DropdownSelectController.tsx"],"sourcesContent":["import React from \"react\";\nimport { DropdownSingleControllerProps } from \"../Dropdown.types\";\nimport useDropdownSelect from \"../hooks/useDropdownSelect\";\nimport { BaseListItemData } from \"../../BaseListItem\";\nimport { DropdownContextProps } from \"../context/DropdownContext.types\";\nimport DropdownWrapperUI from \"../components/DropdownWrapperUI\";\n\nconst DropdownSelectController = <Item extends BaseListItemData<Record<string, unknown>>>(\n  props: DropdownSingleControllerProps<Item>\n) => {\n  const {\n    options,\n    autoFocus,\n    isMenuOpen: isMenuOpenProp,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    showSelectedOptions = false,\n    filterOption,\n    clearable = true,\n    searchable = false,\n    multi = false,\n    dropdownRef,\n    onClear,\n    size = \"medium\"\n  } = props;\n\n  const {\n    isOpen,\n    highlightedIndex,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    toggleMenu,\n    filteredOptions,\n    selectedItem: hookSelectedItem\n  } = useDropdownSelect<Item>(\n    options,\n    autoFocus,\n    isMenuOpenProp,\n    defaultValue,\n    value,\n    onChange,\n    onMenuOpen,\n    onMenuClose,\n    onOptionSelect,\n    showSelectedOptions,\n    filterOption\n  );\n\n  const contextValue: DropdownContextProps<Item> = {\n    ...props,\n    isOpen,\n    highlightedIndex,\n    selectedItem: hookSelectedItem,\n    filteredOptions,\n    getToggleButtonProps: (toggleOptions?: any) => {\n      return getToggleButtonProps({\n        ...(toggleOptions || {}),\n        disabled: props.readOnly || props.disabled\n      });\n    },\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    reset: hookReset,\n    inputValue: null,\n    selectedItems: [],\n    addSelectedItem: undefined,\n    removeSelectedItem: undefined,\n    contextOnClear: () => {\n      hookReset();\n      onClear?.();\n    },\n    contextOnOptionRemove: () => {},\n    clearable,\n    searchable,\n    multi,\n    autoFocus,\n    onClear,\n    size,\n    toggleMenu\n  };\n\n  return <DropdownWrapperUI contextValue={contextValue} dropdownRef={dropdownRef} />;\n};\n\nexport default DropdownSelectController;\n"],"names":["DropdownSelectController","props","autoFocus","_props$showSelectedOp","showSelectedOptions","_props$clearable","clearable","_props$searchable","searchable","_props$multi","multi","dropdownRef","onClear","_props$size","size","_useDropdownSelect","useDropdownSelect","options","isMenuOpen","defaultValue","value","onChange","onMenuOpen","onMenuClose","onOptionSelect","filterOption","isOpen","highlightedIndex","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","hookReset","reset","toggleMenu","filteredOptions","hookSelectedItem","selectedItem","contextValue","Object","assign","toggleOptions","disabled","readOnly","inputValue","selectedItems","addSelectedItem","undefined","removeSelectedItem","contextOnClear","contextOnOptionRemove","React","createElement","DropdownWrapperUI"],"mappings":"oHAOA,IAAMA,EAA2B,SAC/BC,GAEA,IAEEC,EAgBED,EAhBFC,UAOcC,EASZF,EARFG,oBACYC,EAOVJ,EANFK,UAAAA,OAAY,IAAHD,GAAOA,EAAAE,EAMdN,EALFO,WAAAA,OAAa,IAAHD,GAAQA,EAAAE,EAKhBR,EAJFS,MAAAA,OAAQ,IAAHD,GAAQA,EACbE,EAGEV,EAHFU,YACAC,EAEEX,EAFFW,QAAOC,EAELZ,EADFa,KAAAA,OAAO,IAAHD,EAAG,SAAQA,EAGjBE,EAWIC,EAbAf,EAjBFgB,QAgCAf,EAfED,EAfFiB,WAeEjB,EAdFkB,aAcElB,EAbFmB,MAaEnB,EAZFoB,SAYEpB,EAXFqB,WAWErB,EAVFsB,YAUEtB,EATFuB,oBACsB,IAAHrB,GAAQA,EAQzBF,EAPFwB,cAUAC,EAAMX,EAANW,OACAC,EAAgBZ,EAAhBY,iBACAC,EAAoBb,EAApBa,qBACAC,EAAad,EAAbc,cACAC,EAAYf,EAAZe,aACAC,EAAYhB,EAAZgB,aACOC,EAASjB,EAAhBkB,MACAC,EAAUnB,EAAVmB,WACAC,EAAepB,EAAfoB,gBACcC,EAAgBrB,EAA9BsB,aAeIC,EAAYC,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EACbvC,GAAK,CACRyB,OAAAA,EACAC,iBAAAA,EACAU,aAAcD,EACdD,gBAAAA,EACAP,qBAAsB,SAACa,GACrB,OAAOb,EACFW,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAACC,GAAiB,CAAA,GACrB,CAAAC,SAAUzC,EAAM0C,UAAY1C,EAAMyC,WAErC,EACDb,cAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAE,MAAOD,EACPY,WAAY,KACZC,cAAe,GACfC,qBAAiBC,EACjBC,wBAAoBD,EACpBE,eAAgB,WACdjB,IACApB,SAAAA,GACD,EACDsC,sBAAuB,WAAQ,EAC/B5C,UAAAA,EACAE,WAAAA,EACAE,MAAAA,EACAR,UAAAA,EACAU,QAAAA,EACAE,KAAAA,EACAoB,WAAAA,IAGF,OAAOiB,EAAAC,cAACC,EAAiB,CAACf,aAAcA,EAAc3B,YAAaA,GACrE"}