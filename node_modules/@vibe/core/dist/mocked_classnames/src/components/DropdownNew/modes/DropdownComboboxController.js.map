{"version":3,"file":"DropdownComboboxController.js","sources":["../../../../../../src/components/DropdownNew/modes/DropdownComboboxController.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DropdownSingleControllerProps } from \"../Dropdown.types\";\nimport useDropdownCombobox from \"../hooks/useDropdownCombobox\";\nimport { BaseListItemData } from \"../../BaseListItem\";\nimport { DropdownContextProps } from \"../context/DropdownContext.types\";\nimport DropdownWrapperUI from \"../components/DropdownWrapperUI\";\n\nconst DropdownComboboxController = <Item extends BaseListItemData<Record<string, unknown>>>(\n  props: DropdownSingleControllerProps<Item>\n) => {\n  const {\n    options,\n    isMenuOpen: isMenuOpenProp,\n    autoFocus,\n    closeMenuOnSelect = true,\n    defaultValue,\n    value,\n    inputValue: inputValueProp,\n    onChange,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n    onOptionSelect,\n    filterOption,\n    showSelectedOptions = false,\n    clearable = true,\n    searchable = true,\n    multi = false,\n    dropdownRef,\n    onFocus,\n    onBlur,\n    onKeyDown,\n    onClear,\n\n    size = \"medium\",\n    readOnly,\n    disabled\n  } = props;\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleOptionSelect = (item: Item | null) => {\n    onOptionSelect?.(item);\n    if (item) {\n      setIsFocused(false);\n    }\n  };\n\n  const {\n    isOpen,\n    inputValue: hookInputValue,\n    highlightedIndex,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    getInputProps: hookGetInputProps,\n    reset: hookReset,\n    filteredOptions,\n    selectedItem: hookSelectedItem,\n    toggleMenu\n  } = useDropdownCombobox<Item>(\n    options,\n    isMenuOpenProp,\n    autoFocus,\n    closeMenuOnSelect,\n    defaultValue,\n    value,\n    inputValueProp,\n    onChange,\n    onInputChange,\n    onMenuClose,\n    onMenuOpen,\n    handleOptionSelect,\n    filterOption,\n    showSelectedOptions\n  );\n\n  const contextValue: DropdownContextProps<Item> = {\n    ...props,\n    isOpen,\n    inputValue: hookInputValue ?? null,\n    highlightedIndex,\n    selectedItem: hookSelectedItem,\n    selectedItems: [],\n    filteredOptions,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    getInputProps: (inputOptions?: any) => {\n      return hookGetInputProps!({\n        ...(inputOptions || {}),\n        disabled: readOnly || disabled,\n        onFocus: (event: React.FocusEvent<HTMLInputElement>) => {\n          setIsFocused(true);\n          onFocus?.(event as any);\n          inputOptions?.onFocus?.(event);\n        },\n        onBlur: (event: React.FocusEvent<HTMLInputElement>) => {\n          setIsFocused(false);\n          onBlur?.();\n          inputOptions?.onBlur?.(event);\n        },\n        onKeyDown: (event: React.KeyboardEvent<HTMLInputElement>) => {\n          onKeyDown?.(event);\n          inputOptions?.onKeyDown?.(event);\n        }\n      });\n    },\n    reset: hookReset,\n    contextOnClear: () => {\n      hookReset();\n      onClear?.();\n    },\n    contextOnOptionRemove: () => {},\n    addSelectedItem: undefined,\n    removeSelectedItem: undefined,\n    isFocused,\n    clearable,\n    searchable,\n    multi,\n    closeMenuOnSelect,\n    size,\n    toggleMenu\n  };\n  return <DropdownWrapperUI contextValue={contextValue} dropdownRef={dropdownRef} />;\n};\n\nexport default DropdownComboboxController;\n"],"names":["DropdownComboboxController","props","options","isMenuOpenProp","isMenuOpen","autoFocus","_props$closeMenuOnSel","closeMenuOnSelect","defaultValue","value","inputValueProp","inputValue","onChange","onInputChange","onMenuClose","onMenuOpen","onOptionSelect","filterOption","_props$showSelectedOp","showSelectedOptions","_props$clearable","clearable","_props$searchable","searchable","_props$multi","multi","dropdownRef","onFocus","onBlur","onKeyDown","onClear","_props$size","size","readOnly","disabled","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","_useDropdownCombobox","useDropdownCombobox","item","isOpen","hookInputValue","highlightedIndex","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","hookGetInputProps","getInputProps","hookReset","reset","filteredOptions","hookSelectedItem","selectedItem","toggleMenu","contextValue","Object","assign","selectedItems","inputOptions","event","_a","call","contextOnClear","contextOnOptionRemove","addSelectedItem","undefined","removeSelectedItem","React","createElement","DropdownWrapperUI"],"mappings":"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"}