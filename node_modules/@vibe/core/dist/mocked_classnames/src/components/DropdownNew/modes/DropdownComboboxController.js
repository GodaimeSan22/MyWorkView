import{slicedToArray as e}from"../../../../_virtual/_rollupPluginBabelHelpers.js";import o,{useState as n}from"react";import l from"../hooks/useDropdownCombobox.js";import t from"../components/DropdownWrapperUI.js";var u=function(u){var i=u.options,r=u.isMenuOpen,s=u.autoFocus,a=u.closeMenuOnSelect,d=void 0===a||a,c=u.defaultValue,p=u.value,g=u.inputValue,m=u.onChange,v=u.onInputChange,f=u.onMenuClose,O=u.onMenuOpen,b=u.onOptionSelect,I=u.filterOption,h=u.showSelectedOptions,P=void 0!==h&&h,M=u.clearable,w=void 0===M||M,j=u.searchable,x=void 0===j||j,B=u.multi,C=void 0!==B&&B,S=u.dropdownRef,y=u.onFocus,D=u.onBlur,F=u.onKeyDown,V=u.onClear,K=u.size,R=void 0===K?"medium":K,T=u.readOnly,z=u.disabled,L=n(!1),_=e(L,2),k=_[0],A=_[1],E=l(i,r,s,d,c,p,g,m,v,f,O,(function(e){null==b||b(e),e&&A(!1)}),I,P),H=E.isOpen,U=E.inputValue,W=E.highlightedIndex,q=E.getToggleButtonProps,G=E.getLabelProps,J=E.getMenuProps,N=E.getItemProps,Q=E.getInputProps,X=E.reset,Y=E.filteredOptions,Z=E.selectedItem,$=E.toggleMenu,ee=Object.assign(Object.assign({},u),{isOpen:H,inputValue:null!=U?U:null,highlightedIndex:W,selectedItem:Z,selectedItems:[],filteredOptions:Y,getToggleButtonProps:q,getLabelProps:G,getMenuProps:J,getItemProps:N,getInputProps:function(e){return Q(Object.assign(Object.assign({},e||{}),{disabled:T||z,onFocus:function(o){var n;A(!0),null==y||y(o),null===(n=null==e?void 0:e.onFocus)||void 0===n||n.call(e,o)},onBlur:function(o){var n;A(!1),null==D||D(),null===(n=null==e?void 0:e.onBlur)||void 0===n||n.call(e,o)},onKeyDown:function(o){var n;null==F||F(o),null===(n=null==e?void 0:e.onKeyDown)||void 0===n||n.call(e,o)}}))},reset:X,contextOnClear:function(){X(),null==V||V()},contextOnOptionRemove:function(){},addSelectedItem:void 0,removeSelectedItem:void 0,isFocused:k,clearable:w,searchable:x,multi:C,closeMenuOnSelect:d,size:R,toggleMenu:$});return o.createElement(t,{contextValue:ee,dropdownRef:S})};export{u as default};
//# sourceMappingURL=DropdownComboboxController.js.map
